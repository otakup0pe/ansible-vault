---
- debug:
    msg: "vault docker container {{container_name}}"
- name: "check for running container"
  shell: >
    DOCKER_TLS_VERIFY=1 DOCKER_HOST="{{vault_docker_host}}:2376" DOCKER_CERT_PATH="{{vault_docker_cert_path|dirname}}"
    docker inspect --format \{\{.State.Running\}\} {{container_name}}
  ignore_errors: True
  changed_when: no
  delegate_to: localhost
  become: no
  register: vault_container_check
- name: "check running version"
  shell: >
    DOCKER_TLS_VERIFY=1 DOCKER_HOST="{{vault_docker_host}}:2376" DOCKER_CERT_PATH="{{vault_docker_cert_path|dirname}}"
    docker inspect --format \{\{.Config.Image\}\} {{container_name}}
  changed_when: no
  register: vault_version_check
  delegate_to: 'localhost'
  become: no  
  when: vault_container_check.rc == 0
- name: "run container"
  become: no
  delegate_to: 'localhost'
  docker_container:
    name: "{{container_name}}"
    restart_policy: "{{vault_docker_restart}}"
    docker_host: "tcp://{{vault_docker_host}}:2376"
    cacert_path: "{{vault_docker_cacert_path}}"
    key_path: "{{vault_docker_key_path}}"
    cert_path:  "{{vault_docker_cert_path}}"
    tls_hostname: "{{vault_docker_host}}"
    tls_verify: yes
    recreate: "yes"
    published_ports: "{{published_ports|default(omit)}}"
    image: "{{image}}"
    command: "{{use_command|default(omit)}}"
    volumes: "{{volume|default(omit)}}"
    capabilities: "{{caps|default(omit)}}"
    user: "{{as_user|default(omit)}}"
    env: "{{use_env|default(omit)}}"
    ssl_version: "SSLv23"
  when: >
    vault_container_check.rc == 1 or
    (vault_container_check.rc == 0 and
    vault_container_check.stdout == "false") or
    (vault_container_check.rc == 0 and
    vault_version_check.rc == 0 and
    (vault_version_check.stdout.find(image) < 0)) or
    changed|default(False)
